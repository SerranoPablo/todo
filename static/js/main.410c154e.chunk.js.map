{"version":3,"sources":["Todo.js","Done.js","Signature.js","LeftBubble.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Todo","props","useState","tick","setTick","cross","setCross","className","title","onMouseOver","onMouseOut","onClick","add","style","color","delete","Done","back","setBack","reverse","Signature","href","target","LeftBubble","fontSize","class","Home","todo","setTodo","done","setDone","text","setText","addTodo","newText","oldTodos","deleteTodo","titleDelete","filter","item","addDone","titleDone","oldDone","reverseDone","onChange","event","value","onKeyDown","key","type","map","length","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.410c154e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Todo.css';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Todo(props) {\n const [tick, setTick] = useState(true);\n const [cross, setCross] = useState(true);\n\n return (\n  <div className='todo'>\n   <h2 className=\"todo__title\">{props.title}</h2>\n   <div className=\"todo__icons\">\n    <div>\n     <div\n      onMouseOver={() => setTick(!tick)}\n      onMouseOut={() => setTick(!tick)}\n      onClick={() => props.add(props.title)} >\n      {tick ? <CheckIcon /> : <CheckIcon style={{ color: '#06A94D' }} />}\n     </div>\n    </div>\n\n    <div\n     onMouseOver={() => setCross(!cross)}\n     onMouseOut={() => setCross(!cross)}\n     onClick={() => props.delete(props.title)} >\n     {cross ? <CloseIcon /> : <CloseIcon style={{ color: '#B53737' }} />}\n    </div>\n   </div>\n  </div >\n )\n}\n\nexport default Todo\n","import React, { useState } from 'react';\nimport './Done.css';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\n\nfunction Done(props) {\n const [back, setBack] = useState(true);\n const [cross, setCross] = useState(true);\n\n return (\n  <div className='done'>\n   <h2 className=\"done__title\">{props.title}</h2>\n   <div className=\"done__icons\">\n    <div\n     onMouseOver={() => setBack(!back)}\n     onMouseOut={() => setBack(!back)}\n     onClick={() => props.reverse(props.title)}>\n     {back ? <SettingsBackupRestoreIcon /> : <SettingsBackupRestoreIcon style={{ color: '#000000' }} />}\n    </div>\n   </div>\n  </div >\n )\n}\n\nexport default Done\n","import React from 'react';\nimport './Signature.css';\n\nfunction Signature() {\n return (\n  <div className=\"signature\">\n   <p>\n    by <a\n     href=\"https://github.com/serranopablo\"\n     target=\"_blank\"\n     className=\"signature__link\"\n    >Pablo Serrano</a>\n   </p>\n  </div>\n )\n}\n\nexport default Signature\n","import React from 'react';\nimport './LeftBubble.css';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\n\nfunction LeftBubble() {\n return (\n  <div className=\"leftBubble\">\n   <h4>Tip</h4>\n   <p>A list of 5 is a great number to start</p>\n   <ThumbUpIcon\n    className=\"leftBubble__icon\"\n    fontSize=\"small\" />\n   <div class=\"leftBubble__triangle\"></div>\n  </div>\n )\n}\n\nexport default LeftBubble\n","import React, { useState } from 'react';\nimport './Home.css';\nimport Todo from './Todo';\nimport Done from './Done';\nimport Signature from './Signature.js';\nimport LeftBubble from './LeftBubble.js';\nimport Finished from './Finished';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\n\nfunction Home() {\n const [todo, setTodo] = useState([]);\n const [done, setDone] = useState([]);\n const [text, setText] = useState('');\n const [back, setBack] = useState(true);\n\n const addTodo = (newText = text) => {\n  if (newText != '') {\n   setTodo(oldTodos => [...oldTodos, { title: newText }]);\n   setText('');\n  }\n }\n const deleteTodo = (titleDelete) => {\n  setTodo(todo.filter(item => item.title !== titleDelete));\n }\n\n const addDone = (titleDone) => {\n  setDone(oldDone => [...oldDone, { title: titleDone }]);\n  deleteTodo(titleDone);\n }\n\n const reverseDone = (titleDone) => {\n  addTodo(titleDone);\n  setDone(done.filter(item => item.title !== titleDone));\n }\n\n const handleEnter = (event) => {\n  if (event.key === 'Enter') {\n   addTodo();\n  }\n }\n\n const restartArrays = () => {\n  setDone([]);\n  setTodo([]);\n  setText('');\n }\n\n\n return (\n  <div className=\"home\">\n\n   <h1>To Do App</h1>\n   <div className=\"home__addTask\">\n    <input\n     className=\"home__input\"\n     onChange={(event) => setText(event.target.value)}\n     value={text}\n     onKeyDown={handleEnter}\n     type=\"text\" />\n    <button onClick={() => addTodo(text)}>Add</button>\n   </div>\n   <div className=\"home__listTodos\">\n    {todo.map((item) => (\n     <Todo\n      title={item.title}\n      delete={deleteTodo}\n      add={addDone}\n     />\n    ))}\n   </div>\n   <div className=\"home__listDone\">\n    {done.map((item) => (\n     <Done\n      title={item.title}\n      delete={deleteTodo}\n      reverse={reverseDone}\n     />\n    ))}\n   </div>\n   <div className=\"home__leftBubble\">\n    {todo.length === 5 ? <LeftBubble /> : <></>}\n   </div>\n   <div\n    className=\"home__restart\"\n    onMouseOver={() => setBack(!back)}\n    onMouseOut={() => setBack(!back)}\n    onClick={restartArrays}>\n    {back ? <SettingsBackupRestoreIcon style={{ color: '#fcfcfc' }} /> : <SettingsBackupRestoreIcon style={{ color: '#0066FF' }} />}\n   </div>\n   <Signature />\n   <canvas id=\"my-canvas\">\n   </canvas>\n   {/* {(todo.length === 0 && done.length > 0) ? <Finished /> : <></>} */}\n  </div>\n )\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}